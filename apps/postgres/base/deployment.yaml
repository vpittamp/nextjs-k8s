# 'apps/postgres/base/deployment.yaml'
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: nextjs # Or your target namespace
spec:
  replicas: 1
  selector:
    matchLabels: { app: postgres }
  template:
    metadata:
      labels: { app: postgres }
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD # For production, this should come from a Secret
          value: postgres
        - name: POSTGRES_DB
          value: postgres
        - name: LANG
          value: en_US.utf8
        - name: LC_ALL
          value: en_US.utf8
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pgdata
        - mountPath: /docker-entrypoint-initdb.d # Mount path for init scripts
          name: postgres-init-scripts-volume
          readOnly: true # Scripts are read-only
        readinessProbe:
          exec: { command: ["pg_isready", "-U", "postgres"] }
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          exec: { command: ["pg_isready", "-U", "postgres"] }
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: pg-data
      - name: postgres-init-scripts-volume # Define the volume from ConfigMap
        configMap:
          name: postgres-init-scripts # Name of the ConfigMap created above
          # defaultMode: 0755 # Only needed if you have .sh scripts that need execute permission